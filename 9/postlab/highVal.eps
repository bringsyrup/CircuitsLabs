%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Microsoft Windows 7.
%%Title: C:\Users\rspring\SCHOOL_DOCS\CircuitsLabs\9\postlab\highVal.eps
%%CreationDate: 04/24/2015  16:25:20
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -35   217   647   573
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -35   217   647   573
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0420 6876 csm

    0     0  8189  4266 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 8190 4267 rf
6 w
0 3477 6346 0 0 -3477 1065 3797 4 MP
PP
-6346 0 0 3477 6346 0 0 -3477 1065 3797 5 MP stroke
4 w
DO
0 sg
1065 3797 mt 1065  320 L
1065  320 mt 1065  320 L
1971 3797 mt 1971  320 L
1971  320 mt 1971  320 L
2878 3797 mt 2878  320 L
2878  320 mt 2878  320 L
3784 3797 mt 3784  320 L
3784  320 mt 3784  320 L
4691 3797 mt 4691  320 L
4691  320 mt 4691  320 L
5597 3797 mt 5597  320 L
5597  320 mt 5597  320 L
6504 3797 mt 6504  320 L
6504  320 mt 6504  320 L
7411 3797 mt 7411  320 L
7411  320 mt 7411  320 L
1065 3797 mt 7411 3797 L
7411 3797 mt 7411 3797 L
1065 3362 mt 7411 3362 L
7411 3362 mt 7411 3362 L
1065 2927 mt 7411 2927 L
7411 2927 mt 7411 2927 L
1065 2493 mt 7411 2493 L
7411 2493 mt 7411 2493 L
1065 2058 mt 7411 2058 L
7411 2058 mt 7411 2058 L
1065 1623 mt 7411 1623 L
7411 1623 mt 7411 1623 L
1065 1189 mt 7411 1189 L
7411 1189 mt 7411 1189 L
1065  754 mt 7411  754 L
7411  754 mt 7411  754 L
1065  320 mt 7411  320 L
7411  320 mt 7411  320 L
SO
6 w
1065  320 mt 7411  320 L
1065 3797 mt 7411 3797 L
7411 3797 mt 7411  320 L
1065 3797 mt 1065  320 L
1065 3797 mt 7411 3797 L
1065 3797 mt 1065  320 L
1065 3797 mt 1065 3733 L
1065  320 mt 1065  383 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1032 3942 mt 
(0) s
1971 3797 mt 1971 3733 L
1971  320 mt 1971  383 L
1938 3942 mt 
(1) s
2878 3797 mt 2878 3733 L
2878  320 mt 2878  383 L
2845 3942 mt 
(2) s
3784 3797 mt 3784 3733 L
3784  320 mt 3784  383 L
3751 3942 mt 
(3) s
4691 3797 mt 4691 3733 L
4691  320 mt 4691  383 L
4658 3942 mt 
(4) s
5597 3797 mt 5597 3733 L
5597  320 mt 5597  383 L
5564 3942 mt 
(5) s
6504 3797 mt 6504 3733 L
6504  320 mt 6504  383 L
6471 3942 mt 
(6) s
7411 3797 mt 7411 3733 L
7411  320 mt 7411  383 L
7378 3942 mt 
(7) s
7094 4144 mt 
(x 10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

7320 4070 mt 
(-3) s
1065 3797 mt 1128 3797 L
7411 3797 mt 7347 3797 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 797 3841 mt 
(4.83) s
1065 3362 mt 1128 3362 L
7411 3362 mt 7347 3362 L
 797 3406 mt 
(4.84) s
1065 2927 mt 1128 2927 L
7411 2927 mt 7347 2927 L
 797 2971 mt 
(4.85) s
1065 2493 mt 1128 2493 L
7411 2493 mt 7347 2493 L
 797 2537 mt 
(4.86) s
1065 2058 mt 1128 2058 L
7411 2058 mt 7347 2058 L
 797 2102 mt 
(4.87) s
1065 1623 mt 1128 1623 L
7411 1623 mt 7347 1623 L
 797 1667 mt 
(4.88) s
1065 1189 mt 1128 1189 L
7411 1189 mt 7347 1189 L
 797 1233 mt 
(4.89) s
1065  754 mt 1128  754 L
7411  754 mt 7347  754 L
 864  798 mt 
(4.9) s
1065  320 mt 1128  320 L
7411  320 mt 7347  320 L
 797  364 mt 
(4.91) s
1065  320 mt 7411  320 L
1065 3797 mt 7411 3797 L
7411 3797 mt 7411  320 L
1065 3797 mt 1065  320 L
gs 1065 320 6347 3478 rc
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1 0 159 0 831 0 147 0 147 0 147 0 146 0 147 0 
147 0 147 0 131 0 46 0 47 0 47 0 47 0 47 0 
47 0 47 0 35 0 34 0 35 0 34 0 35 0 34 0 
35 0 0 2173 575 0 663 0 119 0 120 0 119 0 120 0 
119 0 120 0 120 0 51 0 51 0 52 0 51 0 51 0 
52 0 51 0 6 0 40 0 40 0 40 0 40 0 40 0 
40 0 40 0 0 -2173 906 0 1065 2927 53 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
1 0 159 0 831 0 147 -5 147 0 147 4 146 9 147 13 
147 19 147 22 131 57 46 23 47 38 47 54 47 70 47 85 
47 100 47 116 35 101 34 134 35 168 34 200 35 234 34 267 
35 301 0 2 575 0 663 -1 119 5 120 -1 119 -6 120 -11 
119 -16 120 -22 120 -27 51 -15 51 -31 52 -44 51 -59 51 -74 
52 -88 51 -102 6 -16 40 -99 40 -137 40 -176 40 -215 40 -253 
40 -293 40 -331 906 0 1065 3576 52 MP stroke
gr

24 w
c9
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

3182  215 mt 
(Step response at 4.85V bias) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 156 FMSR

3977 4111 mt 
(time \(s\)) s
 707 2443 mt  -90 rotate
(Voltage \(V\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1048 3840 mt 
( ) s
7395  362 mt 
( ) s
6 w
1 sg
0 630 819 0 0 -630 6119 1256 4 MP
PP
-819 0 0 630 819 0 0 -630 6119 1256 5 MP stroke
4 w
DO
SO
6 w
6119  626 mt 6938  626 L
6119 1256 mt 6938 1256 L
6938 1256 mt 6938  626 L
6119 1256 mt 6119  626 L
6119 1256 mt 6938 1256 L
6119 1256 mt 6119  626 L
6119  626 mt 6938  626 L
6119 1256 mt 6938 1256 L
6938 1256 mt 6938  626 L
6119 1256 mt 6119  626 L
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

6588  816 mt 
(V) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 132 FMSR

6700  900 mt 
(in) s
gs 6119 626 820 631 rc
24 w
c8
360 0 6191 794 2 MP stroke
gr

24 w
c8
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

6588 1111 mt 
(V) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 132 FMSR

6700 1195 mt 
(out) s
gs 6119 626 820 631 rc
c9
360 0 6191 1088 2 MP stroke
6 w
gr

6 w
c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
